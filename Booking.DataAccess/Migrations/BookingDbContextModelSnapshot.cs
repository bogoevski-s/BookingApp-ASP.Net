// <auto-generated />
using System;
using Booking.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Booking.DataAccess.Migrations
{
    [DbContext(typeof(BookingDbContext))]
    partial class BookingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Booking.DataModels.StorageModels.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookedQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ResourceId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookedQuantity = 2,
                            DateFrom = new DateTime(2023, 5, 22, 19, 19, 8, 912, DateTimeKind.Utc).AddTicks(9399),
                            DateTo = new DateTime(2023, 5, 23, 19, 19, 8, 912, DateTimeKind.Utc).AddTicks(9403),
                            ResourceId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookedQuantity = 1,
                            DateFrom = new DateTime(2023, 5, 21, 19, 19, 8, 912, DateTimeKind.Utc).AddTicks(9404),
                            DateTo = new DateTime(2023, 5, 22, 19, 19, 8, 912, DateTimeKind.Utc).AddTicks(9404),
                            ResourceId = 1
                        });
                });

            modelBuilder.Entity("Booking.DataModels.StorageModels.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Developers",
                            Quantity = 5
                        },
                        new
                        {
                            Id = 2,
                            Name = "QA",
                            Quantity = 3
                        },
                        new
                        {
                            Id = 3,
                            Name = "HR",
                            Quantity = 4
                        },
                        new
                        {
                            Id = 4,
                            Name = "DevOps",
                            Quantity = 7
                        },
                        new
                        {
                            Id = 5,
                            Name = "Designer",
                            Quantity = 9
                        },
                        new
                        {
                            Id = 6,
                            Name = "Managers",
                            Quantity = 4
                        },
                        new
                        {
                            Id = 7,
                            Name = "Recruiters",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 8,
                            Name = "System Administrator",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 9,
                            Name = "Account Executive",
                            Quantity = 8
                        },
                        new
                        {
                            Id = 10,
                            Name = "Sales",
                            Quantity = 11
                        },
                        new
                        {
                            Id = 11,
                            Name = "Marketing",
                            Quantity = 6
                        });
                });

            modelBuilder.Entity("Booking.DataModels.StorageModels.Booking", b =>
                {
                    b.HasOne("Booking.DataModels.StorageModels.Resource", "Resource")
                        .WithMany("Bookings")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("Booking.DataModels.StorageModels.Resource", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
